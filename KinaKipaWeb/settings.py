# -*- coding: utf-8 -*-
"""
Django settings for KinaKipaWeb project.

Generated by 'django-admin startproject' using Django 1.11.7.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os
from django.conf.global_settings import TEMPLATES
from django.utils.translation import ugettext_lazy as _
from . import settings_local

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '+wq83@$(zbmoy^dy$g)pkv5(#1k@wu74alyp@ix!u1iu9%@84-'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = settings_local.ALLOWED_HOSTS

SITE_ID = 1

# Application definition

INSTALLED_APPS = [
    'grappelli',
    'filebrowser',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'django.contrib.flatpages',
    'flatblocks',
    'KinaKipa',
    'tinymce',
    'el_pagination',
    'tagulous',
    'unidecode',
    'Crawler',
    'haystack',
]


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'KinaKipaWeb.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.media',
            ],
        },
    },
]

WSGI_APPLICATION = 'KinaKipaWeb.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': settings_local.DATABASES['default']['ENGINE'],
        'NAME': settings_local.DATABASES['default']['NAME'],
        'USER': settings_local.DATABASES['default']['USER'],
        'PASSWORD': settings_local.DATABASES['default']['PASSWORD'],
        'HOST': settings_local.DATABASES['default']['HOST'],

    }
}


FILEBROWSER_DIRECTORY = ''
FILEBROWSER_MAX_UPLOAD_SIZE = 50*1024*1024
FILEBROWSER_NORMALIZE_FILENAME = False
FILEBROWSER_OVERWRITE_EXISTING = False
FILEBROWSER_DEFAULT_PERMISSIONS = 0o766
FILEBROWSER_EXTENSIONS = {
    'Image': ['.jpg', '.jpeg', '.gif', '.png', '.tif', '.tiff', ''],
    'Document': ['.pdf', '.doc', '.rtf', '.txt', '.xls', '.csv', '.xlsx', '.docx', '.djvu', ''],
    'Video': ['.mov', '.wmv', '.mpeg', '.mpg', '.avi', '.rm', '.ogv'],
    'Audio': ['.mp3', '.mp4', '.wav', '.aiff', '.midi', '.m4p', '.ogg'],
    'None': [],
}

# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'be'

LANGUAGES = [
    ('en', _('English')),
    ('ru', _('Russian')),
    ('be', _('Belarusian')),
]

LOCALE_PATHS = [os.path.join(BASE_DIR, 'locale')]

TIME_ZONE = 'Europe/Minsk'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')


# tagulous settings

SERIALIZATION_MODULES = {
    'xml':    'tagulous.serializers.xml_serializer',
    'json':   'tagulous.serializers.json',
    'python': 'tagulous.serializers.python',
    'yaml':   'tagulous.serializers.pyyaml',
}

TAGULOUS_NAME_MAX_LENGTH = 191

TINYMCE_DEFAULT_CONFIG = {
    'height': 500,
    'width': 700,
    'theme': 'advanced',
    'skin': "o2k7",
    'skin_variant': "silver",
    'plugins': "contextmenu,media,paste,preview,searchreplace,spellchecker,style,visualchars,wordcount,table",
    'theme_advanced_toolbar_location': "top",
    'theme_advanced_toolbar_align': "left",
    'theme_advanced_statusbar_location': "bottom",
    'theme_advanced_resizing': True,
    'theme_advanced_buttons1_add': 'fontselect,fontsizeselect',
    'theme_advanced_buttons2_add': 'pastetext,pasteword,selectall',
    'theme_advanced_buttons3_add': 'styleprops,media',
    # Text styles
    'style_formats': [
        {'title': 'KinaKipaParagraph', 'block': 'p',
         'styles': {
             'font-family': '\'HeliosCond\', sans-serif',
             'font-size': '16px',
             'font-weight': '300',
             'text-align': 'left',
             ''
             'text-decoration': 'none',
             'color': '#111'
         }
         },
        {'title': 'BoldText', 'inline': 'b'}
    ]
}

HAYSTACK_CONNECTIONS = {
    'default': {
        'ENGINE': 'haystack.backends.whoosh_backend.WhooshEngine',
        'PATH': os.path.join(os.path.dirname(__file__), 'whoosh_index'),
    },
}