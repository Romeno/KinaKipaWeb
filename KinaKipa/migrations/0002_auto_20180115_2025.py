# -*- coding: utf-8 -*-
# Generated by Django 1.11.7 on 2018-01-15 17:25
from __future__ import unicode_literals

import django.core.files.storage
from django.db import migrations, models
import django.db.models.deletion
import tagulous.models.fields
import tagulous.models.models


class Migration(migrations.Migration):

    dependencies = [
        ('KinaKipa', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('slug', models.SlugField()),
                ('count', models.IntegerField(default=0, help_text='Internal counter of how many times this tag is in use')),
                ('protected', models.BooleanField(default=False, help_text='Will not be deleted when the count reaches 0')),
                ('path', models.TextField()),
                ('label', models.CharField(help_text='The name of the tag, without ancestors', max_length=255)),
                ('level', models.IntegerField(default=1, help_text='The level of the tag in the tree')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='KinaKipa.Genre')),
            ],
            options={
                'ordering': ('name',),
                'abstract': False,
            },
            bases=(tagulous.models.models.BaseTagTreeModel, models.Model),
        ),
        migrations.RenameField(
            model_name='baner',
            old_name='baner_model',
            new_name='baner',
        ),
        migrations.RemoveField(
            model_name='article',
            name='video',
        ),
        migrations.RemoveField(
            model_name='film',
            name='image_url',
        ),
        migrations.AddField(
            model_name='film',
            name='image',
            field=models.ImageField(blank=True, null=True, storage=django.core.files.storage.FileSystemStorage(location='layout/image/poster'), upload_to='', verbose_name='Film image'),
        ),
        migrations.AlterField(
            model_name='film',
            name='country',
            field=models.CharField(blank=True, default='', help_text='Краiна', max_length=200),
        ),
        migrations.AlterField(
            model_name='film',
            name='description',
            field=models.TextField(blank=True, help_text='Апісанне'),
        ),
        migrations.AlterField(
            model_name='film',
            name='director',
            field=models.CharField(blank=True, help_text='Рэжысёр', max_length=200),
        ),
        migrations.RemoveField(
            model_name='film',
            name='genres',
        ),
        migrations.AlterField(
            model_name='film',
            name='imdb_rating',
            field=models.FloatField(blank=True, default=0.0),
        ),
        migrations.AlterField(
            model_name='film',
            name='kp_rating',
            field=models.FloatField(blank=True, default=0.0),
        ),
        migrations.AlterField(
            model_name='film',
            name='length',
            field=models.CharField(blank=True, default='', help_text='Працягласць', max_length=30),
        ),
        migrations.AlterField(
            model_name='film',
            name='stars',
            field=models.CharField(blank=True, help_text='Акцёры', max_length=800),
        ),
        migrations.AlterField(
            model_name='film',
            name='torrent_links',
            field=models.URLField(blank=True, help_text='Спасылка на торэнт', max_length=2000),
        ),
        migrations.AlterField(
            model_name='film',
            name='year',
            field=models.CharField(blank=True, default='', help_text='Год', max_length=4),
        ),
        migrations.AddField(
            model_name='film',
            name='genres',
            field=tagulous.models.fields.TagField(_set_tag_meta=True, autocomplete_view='film_genres_autocomplete', help_text='Жанры могут включать в себя пробелы', initial='анімэ, баявік, біяграфія, вэстэрн, гістарычны, дакументальны, драма, дэтэктыў, жахі, камедыя, кароткамэтражны, крымінальны, мюзікл, прыгода, серыял, фантастыка', space_delimiter=False, to='KinaKipa.Genre', tree=True),
        ),
        migrations.AlterUniqueTogether(
            name='genre',
            unique_together=set([('slug', 'parent')]),
        ),
    ]
